{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vssns\\\\Downloads\\\\PMP\\\\myproject2\\\\frontend\\\\src\\\\components\\\\ProjectDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDashboard() {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const [projectName, setProjectName] = useState(\"\"); // State for project name\n  const [grades, setGrades] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [tasks, setTasks] = useState([]); // State for tasks (to-do list)\n  const [loadingTasks, setLoadingTasks] = useState(true); // Loading state for tasks\n  const [modalGrade, setModalGrade] = useState(null); // Grade to show in the modal\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\n  const [comments, setComments] = useState([]); // State for comments\n  const [newComment, setNewComment] = useState(\"\"); // State for new comment input\n\n  // Fetch grades, tasks, and comments\n  useEffect(() => {\n    const fetchGradesAndTasksAndComments = async () => {\n      try {\n        // Fetch grades\n        const gradesResponse = await fetch(`http://localhost:8000/api/project/${projectId}/grades/`, {\n          method: 'GET',\n          credentials: 'include' // Include credentials (cookies) for authentication\n        });\n        if (gradesResponse.ok) {\n          const gradesData = await gradesResponse.json();\n          setProjectName(gradesData.project_name); // Set project name\n          setGrades(gradesData.grades); // Set grades data\n        } else {\n          console.error(\"Failed to fetch grades.\");\n        }\n\n        // Fetch to-do list\n        const tasksResponse = await fetch(`http://localhost:8000/api/get_todolist/${projectId}/`, {\n          method: 'GET',\n          credentials: 'include' // Include credentials (cookies) for authentication\n        });\n        if (tasksResponse.ok) {\n          const tasksData = await tasksResponse.json();\n          setTasks(tasksData.tasks); // Set tasks data\n        } else {\n          console.error(\"Failed to fetch tasks.\");\n        }\n\n        // Fetch comments\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\n          method: 'GET',\n          credentials: 'include' // Include credentials (cookies) for authentication\n        });\n        if (commentsResponse.ok) {\n          const commentsData = await commentsResponse.json();\n          setComments(commentsData.comments); // Set comments data\n        } else {\n          console.error(\"Failed to fetch comments.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n        setLoadingTasks(false);\n      }\n    };\n    fetchGradesAndTasksAndComments();\n  }, [projectId]);\n\n  // Open modal to view grade\n  const handleOpenModal = grade => {\n    setModalGrade(grade || \"No grade given yet!\"); // Show \"No grade given yet!\" if grade is null or blank\n    setIsModalOpen(true);\n  };\n\n  // Close modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setModalGrade(null);\n  };\n\n  // Handle task status change\n  const handleTaskChange = async (taskId, event) => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      checked: event.target.checked\n    } : task);\n    setTasks(updatedTasks);\n\n    // Send update to the backend\n    try {\n      await fetch('http://localhost:8000/api/update_todolist/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Include credentials (cookies) for authentication\n        body: JSON.stringify({\n          team_id: projectId,\n          tasks: updatedTasks\n        })\n      });\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Handle comment input change\n  const handleCommentChange = event => {\n    setNewComment(event.target.value);\n  };\n  const handlePostComment = async () => {\n    if (!newComment.trim()) {\n      alert(\"Comment cannot be empty.\");\n      return;\n    }\n    try {\n      // Get the CSRF token from the cookie\n      const csrfToken = document.cookie.split(\"; \").find(row => row.startsWith(\"csrftoken=\")).split(\"=\")[1];\n      const response = await fetch(\"http://localhost:8000/api/post_comment/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken // Include CSRF token here\n        },\n        credentials: 'include',\n        // Include credentials (cookies) for authentication\n        body: JSON.stringify({\n          team_id: projectId,\n          comment: newComment\n        })\n      });\n      if (response.ok) {\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\n          method: 'GET',\n          credentials: 'include' // Include credentials (cookies) for authentication\n        });\n        if (commentsResponse.ok) {\n          const commentsData = await commentsResponse.json();\n          setComments(commentsData.comments); // Set updated comments\n        } else {\n          console.error(\"Failed to fetch updated comments.\");\n        }\n        setNewComment(\"\"); // Clear the comment input\n      } else {\n        console.error(\"Failed to post comment.\");\n      }\n    } catch (error) {\n      console.error(\"Error posting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Project Name: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading grades...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : grades.length > 0 ? grades.map((team, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenModal(team.grade),\n          style: {\n            width: \"11.67%\",\n            // Set width to 11.67%\n            padding: \"10px 20px\",\n            marginTop: \"5px\",\n            backgroundColor: \"#007bff\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"See Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No grades found for this project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: loadingTasks ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: \"flex\",\n              // Use flexbox for alignment\n              alignItems: \"flex-start\",\n              // Center items vertically\n              padding: \"3px\",\n              // Add some padding for readability\n              border: '1px solid #ccc',\n              // Optional: Add a border for better visibility\n              borderRadius: '5px',\n              // Rounded corners\n              width: \"110px\",\n              margin: '10px',\n              // Space between list items\n              marginTop: \"1px\",\n              backgroundColor: '#f8f9fa',\n              // Light background for list items\n              transition: 'background-color 0.3s' // Smooth transition for hover effect\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.checked || false,\n              onChange: event => handleTaskChange(task.id, event),\n              style: {\n                marginRight: '10px',\n                marginTop: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textDecoration: task.checked ? \"line-through\" : \"none\",\n                // Strike-through if checked\n                marginLeft: \"10px\"\n              },\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found for this project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: \"none\",\n          padding: 0\n        },\n        children: comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: \"#f8f9fa\",\n            border: \"1px solid #dee2e6\",\n            borderRadius: \"5px\",\n            padding: \"10px\",\n            marginBottom: \"10px\",\n            width: \"300px\",\n            // Set a fixed width for comments\n            margin: \"0\",\n            // Center the comments\n            transition: \"background-color 0.3s\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), \" \", comment.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: \"#6c757d\"\n            },\n            children: new Date(comment.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: handleCommentChange,\n          placeholder: \"Add a comment...\",\n          rows: \"3\",\n          style: {\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\",\n            marginb\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePostComment,\n          style: {\n            width: \"11.67%\",\n            // Set width to 11.67%\n            padding: \"10px 20px\",\n            marginTop: \"10px\",\n            backgroundColor: \"#007bff\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\"\n          },\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"#fff\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modalGrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseModal,\n        style: {\n          width: \"100%\",\n          padding: \"10px 20px\",\n          marginTop: \"10px\",\n          backgroundColor: \"#dc3545\",\n          color: \"#fff\",\n          border: \"1px solid rgb(0, 0, 0)\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: 999\n      },\n      onClick: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDashboard, \"gtTr21IPOfogQbi3Q/3C/9rwFg4=\", false, function () {\n  return [useParams];\n});\n_c = ProjectDashboard;\nexport default ProjectDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProjectDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","ProjectDashboard","_s","projectId","projectName","setProjectName","grades","setGrades","loading","setLoading","tasks","setTasks","loadingTasks","setLoadingTasks","modalGrade","setModalGrade","isModalOpen","setIsModalOpen","comments","setComments","newComment","setNewComment","fetchGradesAndTasksAndComments","gradesResponse","fetch","method","credentials","ok","gradesData","json","project_name","console","error","tasksResponse","tasksData","commentsResponse","commentsData","handleOpenModal","grade","handleCloseModal","handleTaskChange","taskId","event","updatedTasks","map","task","id","checked","target","headers","body","JSON","stringify","team_id","handleCommentChange","value","handlePostComment","trim","alert","csrfToken","document","cookie","split","find","row","startsWith","response","comment","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","length","team","index","marginBottom","onClick","width","backgroundColor","color","border","borderRadius","cursor","display","alignItems","margin","transition","type","onChange","marginRight","textDecoration","marginLeft","description","listStyleType","user","text","Date","created_at","toLocaleString","placeholder","rows","marginb","position","top","left","transform","boxShadow","zIndex","height","_c","$RefreshReg$"],"sources":["C:/Users/vssns/Downloads/PMP/myproject2/frontend/src/components/ProjectDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ProjectDashboard() {\r\n  const { projectId } = useParams();\r\n  const [projectName, setProjectName] = useState(\"\"); // State for project name\r\n  const [grades, setGrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [tasks, setTasks] = useState([]); // State for tasks (to-do list)\r\n  const [loadingTasks, setLoadingTasks] = useState(true); // Loading state for tasks\r\n  const [modalGrade, setModalGrade] = useState(null); // Grade to show in the modal\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\r\n  const [comments, setComments] = useState([]); // State for comments\r\n  const [newComment, setNewComment] = useState(\"\"); // State for new comment input\r\n\r\n  // Fetch grades, tasks, and comments\r\n  useEffect(() => {\r\n    const fetchGradesAndTasksAndComments = async () => {\r\n      try {\r\n        // Fetch grades\r\n        const gradesResponse = await fetch(`http://localhost:8000/api/project/${projectId}/grades/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (gradesResponse.ok) {\r\n          const gradesData = await gradesResponse.json();\r\n          setProjectName(gradesData.project_name); // Set project name\r\n          setGrades(gradesData.grades); // Set grades data\r\n        } else {\r\n          console.error(\"Failed to fetch grades.\");\r\n        }\r\n\r\n        // Fetch to-do list\r\n        const tasksResponse = await fetch(`http://localhost:8000/api/get_todolist/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (tasksResponse.ok) {\r\n          const tasksData = await tasksResponse.json();\r\n          setTasks(tasksData.tasks); // Set tasks data\r\n        } else {\r\n          console.error(\"Failed to fetch tasks.\");\r\n        }\r\n\r\n        // Fetch comments\r\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (commentsResponse.ok) {\r\n          const commentsData = await commentsResponse.json();\r\n          setComments(commentsData.comments); // Set comments data\r\n        } else {\r\n          console.error(\"Failed to fetch comments.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n        setLoadingTasks(false);\r\n      }\r\n    };\r\n\r\n    fetchGradesAndTasksAndComments();\r\n  }, [projectId]);\r\n\r\n  // Open modal to view grade\r\n  const handleOpenModal = (grade) => {\r\n    setModalGrade(grade || \"No grade given yet!\"); // Show \"No grade given yet!\" if grade is null or blank\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalGrade(null);\r\n  };\r\n\r\n  // Handle task status change\r\n  const handleTaskChange = async (taskId, event) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId ? { ...task, checked: event.target.checked } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n\r\n    // Send update to the backend\r\n    try {\r\n      await fetch('http://localhost:8000/api/update_todolist/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // Include credentials (cookies) for authentication\r\n        body: JSON.stringify({\r\n          team_id: projectId,\r\n          tasks: updatedTasks,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle comment input change\r\n  const handleCommentChange = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const handlePostComment = async () => {\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get the CSRF token from the cookie\r\n      const csrfToken = document.cookie\r\n        .split(\"; \")\r\n        .find(row => row.startsWith(\"csrftoken=\"))\r\n        .split(\"=\")[1];\r\n\r\n      const response = await fetch(\"http://localhost:8000/api/post_comment/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-CSRFToken\": csrfToken,  // Include CSRF token here\r\n        },\r\n        credentials: 'include', // Include credentials (cookies) for authentication\r\n        body: JSON.stringify({\r\n          team_id: projectId,\r\n          comment: newComment,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (commentsResponse.ok) {\r\n          const commentsData = await commentsResponse.json();\r\n          setComments(commentsData.comments); // Set updated comments\r\n        } else {\r\n          console.error(\"Failed to fetch updated comments.\");\r\n        }\r\n        setNewComment(\"\"); // Clear the comment input\r\n      } else {\r\n        console.error(\"Failed to post comment.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Project Dashboard</h1>\r\n      <h2>Project Name: {projectName}</h2> {/* Display project name */}\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        {loading ? (\r\n          <p>Loading grades...</p>\r\n        ) : grades.length > 0 ? (\r\n          grades.map((team, index) => (\r\n            <div key={index} style={{ marginBottom: \"10px\" }}>\r\n              <button\r\n                onClick={() => handleOpenModal(team.grade)}\r\n                style={{\r\n                  width: \"11.67%\", // Set width to 11.67%\r\n                  padding: \"10px 20px\",\r\n                  marginTop: \"5px\",\r\n                  backgroundColor: \"#007bff\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                See Grade\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No grades found for this project.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        {loadingTasks ? (\r\n          <p>Loading tasks...</p>\r\n        ) : tasks.length > 0 ? (\r\n          <div>\r\n            <h3>To-Do List</h3>\r\n            <ul>\r\n              {tasks.map((task) => (\r\n                <li key={task.id} style={{ \r\n                  display: \"flex\", // Use flexbox for alignment\r\n                  alignItems:\"flex-start\", // Center items vertically\r\n                  padding: \"3px\", // Add some padding for readability\r\n                  border: '1px solid #ccc', // Optional: Add a border for better visibility\r\n                  borderRadius: '5px', // Rounded corners\r\n                  width:\"110px\",\r\n                  margin: '10px', // Space between list items\r\n                  marginTop:\"1px\",\r\n                  backgroundColor: '#f8f9fa', // Light background for list items\r\n                  transition: 'background-color 0.3s' // Smooth transition for hover effect\r\n                }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.checked || false}\r\n                    onChange={(event) => handleTaskChange(task.id, event)}\r\n                    style={{ marginRight: '10px',marginTop:\"10px\" }}\r\n                  />\r\n                  <span\r\n                    style={{\r\n                      textDecoration: task.checked ? \"line-through\" : \"none\", // Strike-through if checked\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {task.description}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <p>No tasks found for this project.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Comments</h3>\r\n        <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n          {comments.length > 0 ? (\r\n            comments.map((comment) => (\r\n              <li key={comment.id} style={{\r\n                backgroundColor: \"#f8f9fa\",\r\n                border: \"1px solid #dee2e6\",\r\n                borderRadius: \"5px\",\r\n                padding: \"10px\",\r\n                marginBottom: \"10px\",\r\n                width: \"300px\", // Set a fixed width for comments\r\n                margin: \"0\", // Center the comments\r\n                transition: \"background-color 0.3s\",\r\n              }}>\r\n                <strong>{comment.user}:</strong> {comment.text}\r\n                <br />\r\n                <small style={{ color: \"#6c757d\" }}>{new Date(comment.created_at).toLocaleString()}</small>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>No comments yet.</p>\r\n          )}\r\n        </ul>\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={handleCommentChange}\r\n            placeholder=\"Add a comment...\"\r\n            rows=\"3\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"1px solid #ccc\",\r\n              marginb\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            onClick={handlePostComment}\r\n            style={{\r\n              width: \"11.67%\", // Set width to 11.67%\r\n              padding: \"10px 20px\",\r\n              marginTop: \"10px\",\r\n              backgroundColor: \"#007bff\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            backgroundColor: \"#fff\",\r\n            padding: \"20px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <h3>Grade</h3>\r\n          <p>{modalGrade}</p>\r\n          <button\r\n            onClick={handleCloseModal}\r\n            style={{\r\n              width: \"100%\", \r\n              padding: \"10px 20px\",\r\n              marginTop: \"10px\",\r\n              backgroundColor: \"#dc3545\",\r\n              color: \"#fff\",\r\n              border: \"1px solid rgb(0, 0, 0)\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            zIndex: 999,\r\n          }}\r\n          onClick={handleCloseModal}\r\n        ></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}