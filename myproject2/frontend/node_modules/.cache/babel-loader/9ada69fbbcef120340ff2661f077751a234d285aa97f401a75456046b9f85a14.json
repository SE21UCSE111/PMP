{"ast":null,"code":"import _objectSpread from\"C:/Users/vssns/Downloads/PMP/myproject2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProjectDashboard(){const{projectId}=useParams();const[projectName,setProjectName]=useState(\"\");// State for project name\nconst[grades,setGrades]=useState([]);const[loading,setLoading]=useState(true);const[tasks,setTasks]=useState([]);// State for tasks (to-do list)\nconst[loadingTasks,setLoadingTasks]=useState(true);// Loading state for tasks\nconst[modalGrade,setModalGrade]=useState(null);// Grade to show in the modal\nconst[isModalOpen,setIsModalOpen]=useState(false);// Modal state\nconst[comments,setComments]=useState([]);// State for comments\nconst[newComment,setNewComment]=useState(\"\");// State for new comment input\n// Fetch grades, tasks, and comments\nuseEffect(()=>{const fetchGradesAndTasksAndComments=async()=>{try{// Fetch grades\nconst gradesResponse=await fetch(\"http://localhost:8000/api/project/\".concat(projectId,\"/grades/\"),{method:'GET',credentials:'include'// Include credentials (cookies) for authentication\n});if(gradesResponse.ok){const gradesData=await gradesResponse.json();setProjectName(gradesData.project_name);// Set project name\nsetGrades(gradesData.grades);// Set grades data\n}else{console.error(\"Failed to fetch grades.\");}// Fetch to-do list\nconst tasksResponse=await fetch(\"http://localhost:8000/api/get_todolist/\".concat(projectId,\"/\"),{method:'GET',credentials:'include'// Include credentials (cookies) for authentication\n});if(tasksResponse.ok){const tasksData=await tasksResponse.json();setTasks(tasksData.tasks);// Set tasks data\n}else{console.error(\"Failed to fetch tasks.\");}// Fetch comments\nconst commentsResponse=await fetch(\"http://localhost:8000/api/get_comments/\".concat(projectId,\"/\"),{method:'GET',credentials:'include'// Include credentials (cookies) for authentication\n});if(commentsResponse.ok){const commentsData=await commentsResponse.json();setComments(commentsData.comments);// Set comments data\n}else{console.error(\"Failed to fetch comments.\");}}catch(error){console.error(\"Error fetching data:\",error);}finally{setLoading(false);setLoadingTasks(false);}};fetchGradesAndTasksAndComments();},[projectId]);// Open modal to view grade\nconst handleOpenModal=grade=>{setModalGrade(grade||\"No grade given yet!\");// Show \"No grade given yet!\" if grade is null or blank\nsetIsModalOpen(true);};// Close modal\nconst handleCloseModal=()=>{setIsModalOpen(false);setModalGrade(null);};// Handle task status change\nconst handleTaskChange=async(taskId,event)=>{const updatedTasks=tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),{},{checked:event.target.checked}):task);setTasks(updatedTasks);// Send update to the backend\ntry{await fetch('http://localhost:8000/api/update_todolist/',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',// Include credentials (cookies) for authentication\nbody:JSON.stringify({team_id:projectId,tasks:updatedTasks})});}catch(error){console.error(\"Error updating task:\",error);}};// Handle comment input change\nconst handleCommentChange=event=>{setNewComment(event.target.value);};const handlePostComment=async()=>{if(!newComment.trim()){alert(\"Comment cannot be empty.\");return;}try{// Get the CSRF token from the cookie\nconst csrfToken=document.cookie.split(\"; \").find(row=>row.startsWith(\"csrftoken=\")).split(\"=\")[1];const response=await fetch(\"http://localhost:8000/api/post_comment/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":csrfToken// Include CSRF token here\n},credentials:'include',// Include credentials (cookies) for authentication\nbody:JSON.stringify({team_id:projectId,comment:newComment})});if(response.ok){const commentsResponse=await fetch(\"http://localhost:8000/api/get_comments/\".concat(projectId,\"/\"),{method:'GET',credentials:'include'// Include credentials (cookies) for authentication\n});if(commentsResponse.ok){const commentsData=await commentsResponse.json();setComments(commentsData.comments);// Set updated comments\n}else{console.error(\"Failed to fetch updated comments.\");}setNewComment(\"\");// Clear the comment input\n}else{console.error(\"Failed to post comment.\");}}catch(error){console.error(\"Error posting comment:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Project Dashboard\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Project Name: \",projectName]}),\" \",/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\"},children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading grades...\"}):grades.length>0?grades.map((team,index)=>/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:\"10px\"},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleOpenModal(team.grade),style:{padding:\"10px 20px\",marginTop:\"5px\",backgroundColor:\"#007bff\",color:\"#fff\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"See Grade\"})},index)):/*#__PURE__*/_jsx(\"p\",{children:\"No grades found for this project.\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\"},children:loadingTasks?/*#__PURE__*/_jsx(\"p\",{children:\"Loading tasks...\"}):tasks.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"To-Do List\"}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:\"10px\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.checked||false,onChange:event=>handleTaskChange(task.id,event)}),/*#__PURE__*/_jsx(\"span\",{style:{textDecoration:task.checked?\"line-through\":\"none\",// Strike-through if checked\nmarginLeft:\"10px\"},children:task.description})]},task.id))})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No tasks found for this project.\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comments\"}),/*#__PURE__*/_jsx(\"ul\",{children:comments.length>0?comments.map(comment=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:\"10px\"},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[comment.user,\":\"]}),\" \",comment.text,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:new Date(comment.created_at).toLocaleString()})]},comment.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No comments yet.\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"textarea\",{value:newComment,onChange:handleCommentChange,placeholder:\"Add a comment...\",rows:\"3\",style:{width:\"100%\",padding:\"10px\",borderRadius:\"5px\",border:\"1px solid #ccc\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePostComment,style:{padding:\"10px 20px\",marginTop:\"10px\",backgroundColor:\"#007bff\",color:\"#fff\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Post Comment\"})]})]}),isModalOpen&&/*#__PURE__*/_jsxs(\"div\",{style:{position:\"fixed\",top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\",backgroundColor:\"#fff\",padding:\"20px\",borderRadius:\"10px\",boxShadow:\"0 4px 8px rgba(0, 0, 0, 0.2)\",zIndex:1000},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Grade\"}),/*#__PURE__*/_jsx(\"p\",{children:modalGrade}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCloseModal,style:{padding:\"10px 20px\",marginTop:\"10px\",backgroundColor:\"#dc3545\",color:\"#fff\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Close\"})]}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"fixed\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\",backgroundColor:\"rgba(0, 0, 0, 0.5)\",zIndex:999},onClick:handleCloseModal})]});}export default ProjectDashboard;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsx","_jsx","jsxs","_jsxs","ProjectDashboard","projectId","projectName","setProjectName","grades","setGrades","loading","setLoading","tasks","setTasks","loadingTasks","setLoadingTasks","modalGrade","setModalGrade","isModalOpen","setIsModalOpen","comments","setComments","newComment","setNewComment","fetchGradesAndTasksAndComments","gradesResponse","fetch","concat","method","credentials","ok","gradesData","json","project_name","console","error","tasksResponse","tasksData","commentsResponse","commentsData","handleOpenModal","grade","handleCloseModal","handleTaskChange","taskId","event","updatedTasks","map","task","id","_objectSpread","checked","target","headers","body","JSON","stringify","team_id","handleCommentChange","value","handlePostComment","trim","alert","csrfToken","document","cookie","split","find","row","startsWith","response","comment","style","padding","children","marginTop","length","team","index","marginBottom","onClick","backgroundColor","color","border","borderRadius","cursor","type","onChange","textDecoration","marginLeft","description","user","text","Date","created_at","toLocaleString","placeholder","rows","width","position","top","left","transform","boxShadow","zIndex","height"],"sources":["C:/Users/vssns/Downloads/PMP/myproject2/frontend/src/components/ProjectDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ProjectDashboard() {\r\n  const { projectId } = useParams();\r\n  const [projectName, setProjectName] = useState(\"\"); // State for project name\r\n  const [grades, setGrades] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [tasks, setTasks] = useState([]); // State for tasks (to-do list)\r\n  const [loadingTasks, setLoadingTasks] = useState(true); // Loading state for tasks\r\n  const [modalGrade, setModalGrade] = useState(null); // Grade to show in the modal\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal state\r\n  const [comments, setComments] = useState([]); // State for comments\r\n  const [newComment, setNewComment] = useState(\"\"); // State for new comment input\r\n\r\n  // Fetch grades, tasks, and comments\r\n  useEffect(() => {\r\n    const fetchGradesAndTasksAndComments = async () => {\r\n      try {\r\n        // Fetch grades\r\n        const gradesResponse = await fetch(`http://localhost:8000/api/project/${projectId}/grades/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (gradesResponse.ok) {\r\n          const gradesData = await gradesResponse.json();\r\n          setProjectName(gradesData.project_name); // Set project name\r\n          setGrades(gradesData.grades); // Set grades data\r\n        } else {\r\n          console.error(\"Failed to fetch grades.\");\r\n        }\r\n\r\n        // Fetch to-do list\r\n        const tasksResponse = await fetch(`http://localhost:8000/api/get_todolist/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (tasksResponse.ok) {\r\n          const tasksData = await tasksResponse.json();\r\n          setTasks(tasksData.tasks); // Set tasks data\r\n        } else {\r\n          console.error(\"Failed to fetch tasks.\");\r\n        }\r\n\r\n        // Fetch comments\r\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (commentsResponse.ok) {\r\n          const commentsData = await commentsResponse.json();\r\n          setComments(commentsData.comments); // Set comments data\r\n        } else {\r\n          console.error(\"Failed to fetch comments.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n        setLoadingTasks(false);\r\n      }\r\n    };\r\n\r\n    fetchGradesAndTasksAndComments();\r\n  }, [projectId]);\r\n\r\n  // Open modal to view grade\r\n  const handleOpenModal = (grade) => {\r\n    setModalGrade(grade || \"No grade given yet!\"); // Show \"No grade given yet!\" if grade is null or blank\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalGrade(null);\r\n  };\r\n\r\n  // Handle task status change\r\n  const handleTaskChange = async (taskId, event) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId ? { ...task, checked: event.target.checked } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n\r\n    // Send update to the backend\r\n    try {\r\n      await fetch('http://localhost:8000/api/update_todolist/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // Include credentials (cookies) for authentication\r\n        body: JSON.stringify({\r\n          team_id: projectId,\r\n          tasks: updatedTasks,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle comment input change\r\n  const handleCommentChange = (event) => {\r\n    setNewComment(event.target.value);\r\n  };\r\n\r\n  const handlePostComment = async () => {\r\n    if (!newComment.trim()) {\r\n      alert(\"Comment cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get the CSRF token from the cookie\r\n      const csrfToken = document.cookie\r\n        .split(\"; \")\r\n        .find(row => row.startsWith(\"csrftoken=\"))\r\n        .split(\"=\")[1];\r\n\r\n        const response = await fetch(\"http://localhost:8000/api/post_comment/\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-CSRFToken\": csrfToken,  // Include CSRF token here\r\n          },\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n          body: JSON.stringify({\r\n            team_id: projectId,\r\n            comment: newComment,\r\n          }),\r\n        });\r\n        \r\n\r\n      if (response.ok) {\r\n        const commentsResponse = await fetch(`http://localhost:8000/api/get_comments/${projectId}/`, {\r\n          method: 'GET',\r\n          credentials: 'include', // Include credentials (cookies) for authentication\r\n        });\r\n        if (commentsResponse.ok) {\r\n          const commentsData = await commentsResponse.json();\r\n          setComments(commentsData.comments); // Set updated comments\r\n        } else {\r\n          console.error(\"Failed to fetch updated comments.\");\r\n        }\r\n        setNewComment(\"\"); // Clear the comment input\r\n      } else {\r\n        console.error(\"Failed to post comment.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Project Dashboard</h1>\r\n      <h2>Project Name: {projectName}</h2> {/* Display project name */}\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        {loading ? (\r\n          <p>Loading grades...</p>\r\n        ) : grades.length > 0 ? (\r\n          grades.map((team, index) => (\r\n            <div key={index} style={{ marginBottom: \"10px\" }}>\r\n              <button\r\n                onClick={() => handleOpenModal(team.grade)}\r\n                style={{\r\n                  padding: \"10px 20px\",\r\n                  marginTop: \"5px\",\r\n                  backgroundColor: \"#007bff\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  borderRadius: \"5px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                See Grade\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No grades found for this project.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        {loadingTasks ? (\r\n          <p>Loading tasks...</p>\r\n        ) : tasks.length > 0 ? (\r\n          <div>\r\n            <h3>To-Do List</h3>\r\n            <ul>\r\n              {tasks.map((task) => (\r\n                <li key={task.id} style={{ marginBottom: \"10px\" }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.checked || false}\r\n                    onChange={(event) => handleTaskChange(task.id, event)}\r\n                  />\r\n                  <span\r\n                    style={{\r\n                      textDecoration: task.checked ? \"line-through\" : \"none\", // Strike-through if checked\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  >\r\n                    {task.description}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <p>No tasks found for this project.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Comments</h3>\r\n        <ul>\r\n          {comments.length > 0 ? (\r\n            comments.map((comment) => (\r\n              <li key={comment.id} style={{ marginBottom: \"10px\" }}>\r\n                <strong>{comment.user}:</strong> {comment.text}\r\n                <br />\r\n                <small>{new Date(comment.created_at).toLocaleString()}</small>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>No comments yet.</p>\r\n          )}\r\n        </ul>\r\n\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={handleCommentChange}\r\n            placeholder=\"Add a comment...\"\r\n            rows=\"3\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              border: \"1px solid #ccc\",\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            onClick={handlePostComment}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              marginTop: \"10px\",\r\n              backgroundColor: \"#007bff\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Post Comment\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            backgroundColor: \"#fff\",\r\n            padding: \"20px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n            zIndex: 1000,\r\n          }}\r\n        >\r\n          <h3>Grade</h3>\r\n          <p>{modalGrade}</p>\r\n          <button\r\n            onClick={handleCloseModal}\r\n            style={{\r\n              padding: \"10px 20px\",\r\n              marginTop: \"10px\",\r\n              backgroundColor: \"#dc3545\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n            zIndex: 999,\r\n          }}\r\n          onClick={handleCloseModal}\r\n        ></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}