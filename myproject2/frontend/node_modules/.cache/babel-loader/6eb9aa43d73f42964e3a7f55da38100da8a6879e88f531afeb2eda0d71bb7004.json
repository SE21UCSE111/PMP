{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vssns\\\\Downloads\\\\PMP\\\\myproject2\\\\frontend\\\\src\\\\components\\\\ProjectsContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the context\nexport const useProjects = () => {\n  _s();\n  return useContext(ProjectsContext);\n};\n\n// Provider component to wrap around your app or component tree\n_s(useProjects, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ProjectsProvider = ({\n  children\n}) => {\n  _s2();\n  const [projects, setProjects] = useState([]);\n  const addProject = project => {\n    setProjects(prevProjects => [...prevProjects, project]);\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects,\n      addProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProjectsProvider, \"lPPzzHsH2OURXf8QVy/+Q714wnQ=\");\n_c = ProjectsProvider;\nvar _c;\n$RefreshReg$(_c, \"ProjectsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ProjectsContext","useProjects","_s","ProjectsProvider","children","_s2","projects","setProjects","addProject","project","prevProjects","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vssns/Downloads/PMP/myproject2/frontend/src/components/ProjectsContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create context\r\nconst ProjectsContext = createContext();\r\n\r\n// Custom hook to use the context\r\nexport const useProjects = () => {\r\n  return useContext(ProjectsContext);\r\n};\r\n\r\n// Provider component to wrap around your app or component tree\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const addProject = (project) => {\r\n    setProjects((prevProjects) => [...prevProjects, project]);\r\n  };\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, addProject }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;;AAEvC;AACA,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,OAAON,UAAU,CAACI,eAAe,CAAC;AACpC,CAAC;;AAED;AAAAE,EAAA,CAJaD,WAAW;AAKxB,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,UAAU,GAAIC,OAAO,IAAK;IAC9BF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;EAC3D,CAAC;EAED,oBACEV,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ;MAAEE;IAAW,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACX,GAAA,CAZWF,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}