{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vssns\\\\Downloads\\\\PMP\\\\myproject2\\\\frontend\\\\src\\\\components\\\\TeamDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport './TeamDashboard.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeamDashboard() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const teamId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.teamId;\n  const [selectedGrade, setSelectedGrade] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n\n  // Fetch the to-do list\n  const fetchToDoList = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/get_todolist/${teamId}/`, {\n        method: 'GET'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(data.tasks.length ? data.tasks : [{\n          description: \"\",\n          checked: false\n        }]);\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to fetch to-do list: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error fetching to-do list:\", error);\n    }\n  };\n\n  // Fetch comments for the team\n  const fetchComments = async () => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/get_comments/${teamId}/`, {\n        method: 'GET'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setComments(data.comments);\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to fetch comments: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchToDoList();\n    fetchComments();\n  }, [teamId]);\n  const handleBackToHome = () => {\n    navigate(\"/professor\");\n  };\n  const handleGradeChange = event => {\n    setSelectedGrade(event.target.value);\n  };\n  const handleSubmitGrade = async () => {\n    var _document$cookie$spli;\n    if (!selectedGrade) {\n      alert(\"Please select a grade.\");\n      return;\n    }\n    const csrfToken = (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n    if (!csrfToken) {\n      alert(\"CSRF token not found.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/update_grade/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          grade: selectedGrade,\n          team_id: teamId\n        })\n      });\n      if (response.ok) {\n        alert(\"Grade updated successfully.\");\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to update grade: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error updating grade:\", error);\n    }\n  };\n  const handleTaskChange = (index, event) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].description = event.target.value;\n    setTasks(updatedTasks);\n  };\n  const handleTaskCheckedChange = async index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].checked = !updatedTasks[index].checked;\n    setTasks(updatedTasks);\n\n    // Automatically save the updated to-do list when a checkbox is toggled\n    await handleCreateOrUpdateToDoList();\n  };\n  const handleAddTaskAtIndex = index => {\n    const newTask = {\n      description: \"\",\n      checked: false\n    };\n    const updatedTasks = [...tasks.slice(0, index), newTask, ...tasks.slice(index)];\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = index => {\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\n    setTasks(updatedTasks.length ? updatedTasks : [{\n      description: \"\",\n      checked: false\n    }]);\n  };\n  const handleCreateOrUpdateToDoList = async () => {\n    var _document$cookie$spli2;\n    const csrfToken = (_document$cookie$spli2 = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))) === null || _document$cookie$spli2 === void 0 ? void 0 : _document$cookie$spli2.split('=')[1];\n    if (!csrfToken) {\n      alert(\"CSRF token not found.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/manage_todolist/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          team_id: teamId,\n          tasks: tasks\n        })\n      });\n      if (response.ok) {\n        alert(\"To-Do List saved successfully.\");\n        setIsModalOpen(false);\n        fetchToDoList();\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to save to-do list: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error saving to-do list:\", error);\n    }\n  };\n  const handlePostComment = async () => {\n    var _document$cookie$spli3;\n    if (!newComment.trim()) {\n      alert(\"Please enter a comment.\");\n      return;\n    }\n    const csrfToken = (_document$cookie$spli3 = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))) === null || _document$cookie$spli3 === void 0 ? void 0 : _document$cookie$spli3.split('=')[1];\n    if (!csrfToken) {\n      alert(\"CSRF token not found.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/post_comment/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          team_id: teamId,\n          comment: newComment\n        })\n      });\n      if (response.ok) {\n        alert(\"Comment posted successfully.\");\n        setNewComment(\"\"); // Clear the comment input field\n        fetchComments(); // Refresh the comments list\n      } else {\n        const errorData = await response.json();\n        alert(`Failed to post comment: ${errorData.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error posting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Team Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToHome,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Assign Grade: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedGrade,\n        onChange: handleGradeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"A\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"B\",\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"C\",\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"D\",\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"F\",\n          children: \"F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitGrade,\n          children: \"Submit Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          children: \"Create/Update To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Write a comment\",\n          rows: \"3\",\n          style: {\n            width: \"100%\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePostComment,\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), \": \", comment.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(comment.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create/Update To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTaskAtIndex(index),\n            style: {\n              marginBottom: \"5px\"\n            },\n            children: \"Add Task Above\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: task.description,\n            onChange: event => handleTaskChange(index, event),\n            placeholder: `Task ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(index),\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTaskAtIndex(tasks.length),\n            children: \"Add Task at the End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateOrUpdateToDoList,\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"Save To-Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Existing To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.checked || false,\n            onChange: () => handleTaskCheckedChange(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: task.checked ? \"line-through\" : \"none\"\n            },\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(TeamDashboard, \"2e4B9hZb697K559Io3cSEVJv7Nw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TeamDashboard;\nexport default TeamDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeamDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","TeamDashboard","_s","_location$state","navigate","location","teamId","state","selectedGrade","setSelectedGrade","isModalOpen","setIsModalOpen","tasks","setTasks","comments","setComments","newComment","setNewComment","fetchToDoList","response","fetch","method","ok","data","json","length","description","checked","errorData","alert","message","error","console","fetchComments","handleBackToHome","handleGradeChange","event","target","value","handleSubmitGrade","_document$cookie$spli","csrfToken","document","cookie","split","find","row","startsWith","headers","credentials","body","JSON","stringify","grade","team_id","handleTaskChange","index","updatedTasks","handleTaskCheckedChange","handleCreateOrUpdateToDoList","handleAddTaskAtIndex","newTask","slice","handleDeleteTask","filter","_","taskIndex","_document$cookie$spli2","handlePostComment","_document$cookie$spli3","trim","comment","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","onChange","className","e","placeholder","rows","width","marginBottom","map","user","text","Date","created_at","toLocaleString","id","task","type","marginLeft","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/vssns/Downloads/PMP/myproject2/frontend/src/components/TeamDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport './TeamDashboard.css'; // Import the CSS file\r\n\r\nfunction TeamDashboard() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const teamId = location.state?.teamId;\r\n\r\n  const [selectedGrade, setSelectedGrade] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  // Fetch the to-do list\r\n  const fetchToDoList = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/get_todolist/${teamId}/`, {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setTasks(data.tasks.length ? data.tasks : [{ description: \"\", checked: false }]);\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to fetch to-do list: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching to-do list:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch comments for the team\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/get_comments/${teamId}/`, {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setComments(data.comments);\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to fetch comments: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchToDoList();\r\n    fetchComments();\r\n  }, [teamId]);\r\n\r\n  const handleBackToHome = () => {\r\n    navigate(\"/professor\");\r\n  };\r\n\r\n  const handleGradeChange = (event) => {\r\n    setSelectedGrade(event.target.value);\r\n  };\r\n\r\n  const handleSubmitGrade = async () => {\r\n    if (!selectedGrade) {\r\n      alert(\"Please select a grade.\");\r\n      return;\r\n    }\r\n\r\n    const csrfToken = document.cookie\r\n      .split('; ')\r\n      .find(row => row.startsWith('csrftoken='))?.split('=')[1];\r\n\r\n    if (!csrfToken) {\r\n      alert(\"CSRF token not found.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/update_grade/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken,\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          grade: selectedGrade,\r\n          team_id: teamId,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Grade updated successfully.\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to update grade: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating grade:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTaskChange = (index, event) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].description = event.target.value;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleTaskCheckedChange = async (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].checked = !updatedTasks[index].checked;\r\n    setTasks(updatedTasks);\r\n\r\n    // Automatically save the updated to-do list when a checkbox is toggled\r\n    await handleCreateOrUpdateToDoList();\r\n  };\r\n\r\n  const handleAddTaskAtIndex = (index) => {\r\n    const newTask = { description: \"\", checked: false };\r\n    const updatedTasks = [\r\n      ...tasks.slice(0, index), \r\n      newTask, \r\n      ...tasks.slice(index),\r\n    ];\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, taskIndex) => taskIndex !== index);\r\n    setTasks(updatedTasks.length ? updatedTasks : [{ description: \"\", checked: false }]);\r\n  };\r\n\r\n  const handleCreateOrUpdateToDoList = async () => {\r\n    const csrfToken = document.cookie\r\n      .split('; ')\r\n      .find(row => row.startsWith('csrftoken='))?.split('=')[1];\r\n\r\n    if (!csrfToken) {\r\n      alert(\"CSRF token not found.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/manage_todolist/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken,\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          team_id: teamId,\r\n          tasks: tasks,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"To-Do List saved successfully.\");\r\n        setIsModalOpen(false);\r\n        fetchToDoList();\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to save to-do list: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving to-do list:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePostComment = async () => {\r\n    if (!newComment.trim()) {\r\n      alert(\"Please enter a comment.\");\r\n      return;\r\n    }\r\n\r\n    const csrfToken = document.cookie\r\n      .split('; ')\r\n      .find(row => row.startsWith('csrftoken='))?.split('=')[1];\r\n\r\n    if (!csrfToken) {\r\n      alert(\"CSRF token not found.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/post_comment/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken,\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({\r\n          team_id: teamId,\r\n          comment: newComment,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Comment posted successfully.\");\r\n        setNewComment(\"\");  // Clear the comment input field\r\n        fetchComments();  // Refresh the comments list\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(`Failed to post comment: ${errorData.message}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error posting comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Team Dashboard</h1>\r\n      <button onClick={handleBackToHome}>Back to Home</button>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <label>Assign Grade: </label>\r\n        <select value={selectedGrade} onChange={handleGradeChange}>\r\n          <option value=\"\">Select Grade</option>\r\n          <option value=\"A\">A</option>\r\n          <option value=\"B\">B</option>\r\n          <option value=\"C\">C</option>\r\n          <option value=\"D\">D</option>\r\n          <option value=\"F\">F</option>\r\n        </select>\r\n\r\n        <div className=\"team-buttons\">\r\n          <button onClick={handleSubmitGrade}>Submit Grade</button>\r\n          <button onClick={() => setIsModalOpen(true)}>Create/Update To-Do List</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Comments</h3>\r\n        <div>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Write a comment\"\r\n            rows=\"3\"\r\n            style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n          ></textarea>\r\n          <button onClick={handlePostComment}>Post Comment</button>\r\n        </div>\r\n\r\n        <ul style={{ marginTop: \"10px\" }}>\r\n          {comments.map((comment) => (\r\n            <li key={comment.id}>\r\n              <strong>{comment.user}</strong>: {comment.text} <br />\r\n              <small>{new Date(comment.created_at).toLocaleString()}</small>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>Create/Update To-Do List</h3>\r\n            {tasks.map((task, index) => (\r\n              <div key={index}>\r\n                <button\r\n                  onClick={() => handleAddTaskAtIndex(index)}\r\n                  style={{ marginBottom: \"5px\" }}\r\n                >\r\n                  Add Task Above\r\n                </button>\r\n                <input\r\n                  type=\"text\"\r\n                  value={task.description}\r\n                  onChange={(event) => handleTaskChange(index, event)}\r\n                  placeholder={`Task ${index + 1}`}\r\n                />\r\n                <button onClick={() => handleDeleteTask(index)} style={{ marginLeft: \"10px\" }}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <button onClick={() => handleAddTaskAtIndex(tasks.length)}>Add Task at the End</button>\r\n              <button onClick={handleCreateOrUpdateToDoList} style={{ marginLeft: \"10px\" }}>\r\n                Save To-Do List\r\n              </button>\r\n              <button onClick={() => setIsModalOpen(false)} style={{ marginLeft: \"10px\" }}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Existing To-Do List</h3>\r\n        <ul>\r\n          {tasks.map((task, index) => (\r\n            <li key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={task.checked || false}\r\n                onChange={() => handleTaskCheckedChange(index)}\r\n              />\r\n              <span style={{ textDecoration: task.checked ? \"line-through\" : \"none\" }}>\r\n                {task.description}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}